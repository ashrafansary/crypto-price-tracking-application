{"version":3,"sources":["Crypto.js","App.js","index.js"],"names":["Crypto","image","name","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","pageNumber","setPageNumber","currentPage","filteredCoins","filter","coin","toLowerCase","includes","pageCount","Math","ceil","length","changePage","selected","useEffect","axios","get","then","res","data","console","log","catch","err","type","placeholder","onChange","e","target","value","slice","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","onPageChange","previousLabel","nextLabel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUA6BeA,MA1Bf,YAA+E,IAA9DC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,UAC9D,OACI,mCACJ,qBAAKC,UAAU,mBAAf,SACY,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKC,IAAKR,EAAOS,IAAI,iBACrB,6BAAKR,IACL,mBAAGM,UAAU,gBAAb,SAA8BL,OAElC,sBAAKK,UAAU,cAAf,UACI,mBAAGA,UAAU,eAAb,SAA6BJ,IAC7B,mBAAGI,UAAU,gBAAb,SAA8BH,EAAOM,mBACpCL,EAAc,EACV,oBAAGE,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OACE,oBAAGJ,UAAU,uBAAb,UAAqCF,EAAYM,QAAQ,GAAzD,OAEP,oBAAGJ,UAAU,mBAAb,uBAA2CD,EAAUI,+B,iBCkE9DE,MA7Ef,WAAgB,IAAD,EAEb,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAGMC,EADe,GACDF,EAEdG,EAAgBP,EAAMQ,QAAO,SAAAC,GACjC,OAAOA,EAAKtB,KAAKuB,cAAcC,SAAST,EAAOQ,kBAG3CE,EAAYC,KAAKC,KAAKd,EAAMe,OAPb,IAQfC,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClBZ,EAAcY,IAmBhB,OAhBAC,qBAAU,WACRC,IAAMC,IAAI,wGACPC,MAAK,SAAAC,GACJrB,EAASqB,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAEf,CAACvB,IAQF,sBAAKX,UAAU,aAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,yBAAd,+BACA,+BACE,uBAAOmC,KAAK,OAAOC,YAAY,0BAA0BpC,UAAU,sBAAsBqC,SAV5E,SAACC,GACpB5B,EAAU4B,EAAEC,OAAOC,eAYhB1B,EACA2B,MAAM5B,EAAaA,EArCH,IAsChB6B,KAAI,SAAA1B,GACH,OACE,cAAC,EAAD,CAEAtB,KAAMsB,EAAKtB,KACXD,MAAOuB,EAAKvB,MACZE,OAAQqB,EAAKrB,OACbI,UAAWiB,EAAK2B,WAChB/C,MAAOoB,EAAK4B,cACZ9C,YAAakB,EAAK6B,4BAClBhD,OAAQmB,EAAK8B,aACb3B,UAAWA,EACXI,WAAYA,GATPP,EAAK+B,OAad,cAAC,KAAD,GACEC,aAAczB,EACdJ,UAAWA,EACX8B,cAAe,WACfC,UAAW,QAJb,0BAKa/B,GALb,6BAMgBI,GANhB,mCAOsB,mBAPtB,sCAQyB,gBARzB,kCASqB,YATrB,kCAUqB,sBAVrB,gCAWmB,oBAXnB,QC/DN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.601370c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Crypto.css'\r\n\r\nfunction Crypto({image, name, symbol, price, volume, priceChange, marketcap}) {\r\n    return (\r\n        <>\r\n    <div className=\"crypto-container\">\r\n                <div className=\"crypto-row\">\r\n                    <div className=\"crypto\">\r\n                        <img src={image} alt=\"crypto-image\" />\r\n                        <h1>{name}</h1>\r\n                        <p className=\"crypto-symbol\">{symbol}</p>\r\n                    </div>\r\n                    <div className=\"crypto-data\">\r\n                        <p className=\"crypto-price\">{price}</p>\r\n                        <p className=\"crypto-volume\">{volume.toLocaleString()}</p>\r\n                        {priceChange < 0 ? \r\n                            (<p className=\"crypto-percent red\">{priceChange.toFixed(2)}%</p>)\r\n                            : (<p className=\"crypto-percent green\">{priceChange.toFixed(2)}%</p>)\r\n                        }\r\n                        <p className=\"crypto-marketcap\">Mkt cap : {marketcap.toLocaleString()}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Crypto\r\n","import './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Crypto from './Crypto';\nimport ReactPaginate from 'react-paginate';\n\n\n// https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\n\nfunction App() {\n\n  const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState('')\n  const [pageNumber, setPageNumber] = useState(0)\n\n  const coinsPerPage = 10;\n  const currentPage = pageNumber * coinsPerPage\n\n  const filteredCoins = coins.filter(coin => {\n    return coin.name.toLowerCase().includes(search.toLowerCase())\n  })\n\n  const pageCount = Math.ceil(coins.length / coinsPerPage)\n  const changePage =({selected}) => {\n    setPageNumber(selected)\n  }\n\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&sparkline=false')\n      .then(res => {\n        setCoins(res.data)\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err );\n      })\n  }, [pageNumber])\n\n  const handleChange = (e) => {\n    setSearch(e.target.value)\n  }\n\n\n  return (\n    <div className=\"crypto-app\">\n      <div className=\"crypto-search\">\n        <h1 className=\"crypto-search-currency\">Search a currency</h1>\n        <form>\n          <input type=\"text\" placeholder=\"Search here: like xrp  \" className=\"crypto-search-input\" onChange={handleChange }/>\n        </form>\n      </div>\n      {filteredCoins\n      .slice(currentPage, currentPage + coinsPerPage)\n      .map(coin => {\n        return (\n          <Crypto \n          key={coin.id} \n          name={coin.name} \n          image={coin.image}\n          symbol={coin.symbol}\n          marketcap={coin.market_cap}\n          price={coin.current_price}\n          priceChange={coin.price_change_percentage_24h}\n          volume={coin.total_volume}\n          pageCount={pageCount}\n          changePage={changePage}\n          />\n        )\n      })}\n      <ReactPaginate \n        onPageChange={changePage}\n        pageCount={pageCount}\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"} \n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}